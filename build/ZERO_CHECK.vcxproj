<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6C6CC5E0-46FE-3A11-B0B7-0B320062B99B}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\code\Y-PBR\lib\json;E:\code\Y-PBR\lib\loadpng;E:\code\Y-PBR\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\code\Y-PBR\lib\json;E:\code\Y-PBR\lib\loadpng;E:\code\Y-PBR\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\code\Y-PBR\lib\json;E:\code\Y-PBR\lib\loadpng;E:\code\Y-PBR\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\code\Y-PBR\lib\json;E:\code\Y-PBR\lib\loadpng;E:\code\Y-PBR\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\code\Y-PBR\build\CMakeFiles\d026f2662284bbd54e8052f104e30a8b\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/code/Y-PBR -BE:/code/Y-PBR/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/Y-PBR/build/Y-PBR.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\WindowsPaths.cmake;E:\code\Y-PBR\CMakeLists.txt;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCUDACompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCXXCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeRCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeSystem.cmake;E:\code\Y-PBR\lib\CMakeLists.txt;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config-version.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets-release.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets.cmake;E:\code\Y-PBR\lib\glm\CMakeLists.txt;E:\code\Y-PBR\lib\stb\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindASan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindMSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindSanitizers.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindTSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindUBSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\sanitize-helpers.cmake;E:\code\Y-PBR\tiny-cuda-nn\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\benchmarks\image\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\support\cmake\JoinPaths.cmake;E:\code\Y-PBR\tiny-cuda-nn\samples\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\code\Y-PBR\build\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\glm\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\tinyexr\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\stb\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\dependencies\fmt\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\samples\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\benchmarks\image\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/code/Y-PBR -BE:/code/Y-PBR/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/Y-PBR/build/Y-PBR.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\WindowsPaths.cmake;E:\code\Y-PBR\CMakeLists.txt;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCUDACompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCXXCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeRCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeSystem.cmake;E:\code\Y-PBR\lib\CMakeLists.txt;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config-version.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets-release.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets.cmake;E:\code\Y-PBR\lib\glm\CMakeLists.txt;E:\code\Y-PBR\lib\stb\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindASan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindMSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindSanitizers.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindTSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindUBSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\sanitize-helpers.cmake;E:\code\Y-PBR\tiny-cuda-nn\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\benchmarks\image\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\support\cmake\JoinPaths.cmake;E:\code\Y-PBR\tiny-cuda-nn\samples\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\code\Y-PBR\build\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\glm\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\tinyexr\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\stb\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\dependencies\fmt\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\samples\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\benchmarks\image\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/code/Y-PBR -BE:/code/Y-PBR/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/Y-PBR/build/Y-PBR.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\WindowsPaths.cmake;E:\code\Y-PBR\CMakeLists.txt;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCUDACompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCXXCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeRCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeSystem.cmake;E:\code\Y-PBR\lib\CMakeLists.txt;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config-version.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets-release.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets.cmake;E:\code\Y-PBR\lib\glm\CMakeLists.txt;E:\code\Y-PBR\lib\stb\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindASan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindMSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindSanitizers.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindTSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindUBSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\sanitize-helpers.cmake;E:\code\Y-PBR\tiny-cuda-nn\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\benchmarks\image\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\support\cmake\JoinPaths.cmake;E:\code\Y-PBR\tiny-cuda-nn\samples\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\code\Y-PBR\build\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\glm\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\tinyexr\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\stb\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\dependencies\fmt\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\samples\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\benchmarks\image\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/code/Y-PBR -BE:/code/Y-PBR/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/code/Y-PBR/build/Y-PBR.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\Platform\WindowsPaths.cmake;E:\code\Y-PBR\CMakeLists.txt;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCUDACompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeCXXCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeRCCompiler.cmake;E:\code\Y-PBR\build\CMakeFiles\3.27.0-rc4\CMakeSystem.cmake;E:\code\Y-PBR\lib\CMakeLists.txt;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config-version.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets-release.cmake;E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets.cmake;E:\code\Y-PBR\lib\glm\CMakeLists.txt;E:\code\Y-PBR\lib\stb\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\CMakeLists.txt;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindASan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindMSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindSanitizers.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindTSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindUBSan.cmake;E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\sanitize-helpers.cmake;E:\code\Y-PBR\tiny-cuda-nn\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\benchmarks\image\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\CMakeLists.txt;E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\support\cmake\JoinPaths.cmake;E:\code\Y-PBR\tiny-cuda-nn\samples\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\code\Y-PBR\build\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\glm\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\tinyexr\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\lib\stb\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\dependencies\fmt\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\samples\CMakeFiles\generate.stamp;E:\code\Y-PBR\build\tiny-cuda-nn\benchmarks\image\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="E:\code\Y-PBR\lib\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config-version.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-config.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets-release.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\embree\windows\lib\cmake\embree-3.13.5\embree-targets.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\glm\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\lib\stb\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindASan.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindMSan.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindSanitizers.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindTSan.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\FindUBSan.cmake">
    </None>
    <None Include="E:\code\Y-PBR\lib\tinyexr\cmake\sanitizers\sanitize-helpers.cmake">
    </None>
    <None Include="E:\code\Y-PBR\tiny-cuda-nn\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\tiny-cuda-nn\benchmarks\image\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\CMakeLists.txt">
    </None>
    <None Include="E:\code\Y-PBR\tiny-cuda-nn\dependencies\fmt\support\cmake\JoinPaths.cmake">
    </None>
    <None Include="E:\code\Y-PBR\tiny-cuda-nn\samples\CMakeLists.txt">
    </None>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.targets" />
  </ImportGroup>
</Project>